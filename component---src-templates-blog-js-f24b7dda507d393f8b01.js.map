{"version":3,"sources":["webpack:///./src/templates/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/siteLogo.js","webpack:///./src/components/headerLinks.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/basePage.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_basePage__WEBPACK_IMPORTED_MODULE_2__","_ref","data","pageContext","currentPage","numPages","prevLink","nextLink","postsData","allMarkdownRemark","edges","map","_ref2","node","a","createElement","to","frontmatter","path","key","id","className","title","date","excerpt","pagLinks","i","push","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SiteLogo","siteName","react_default","gatsby_browser_entry","site","siteMetadata","toLowerCase","_2729156960","LinkLi","text","activeClassName","HeaderLinks","headerLinks_LinkLi","Header","siteLogo_SiteLogo","headerLinks_HeaderLinks","Footer","BasePage","description","Fragment","Helmet","property","content","baseUrl","name","header_Header","footer_Footer","_2351193646"],"mappings":"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","file":"component---src-templates-blog-js-f24b7dda507d393f8b01.js","sourcesContent":["import React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport {BasePage} from \"../components/basePage\";\n\nexport default ({data, pageContext}) => {\n    const {currentPage, numPages} = pageContext;\n    const prevLink = currentPage === 2 ? '/blog' : `/blog/list/${currentPage - 1}`;\n    const nextLink = `/blog/list/${currentPage + 1}`;\n    const posts = data.allMarkdownRemark.edges;\n    const postsData = posts.map(({node}) => {\n        return (\n            <Link to={node.frontmatter.path} key={node.id} className=\"postPreviewLink\">\n                <div className=\"postPreviewContainer\">\n                    <h1>{node.frontmatter.title}</h1>\n                    <p className=\"datep\">{node.frontmatter.date}</p>\n                    <p>{node.excerpt}</p>\n                </div>\n            </Link>\n        );\n    });\n    const pagLinks = [];\n    for (let i = 0; i < numPages; i ++) {\n\tpagLinks.push(<Link className='pagination' to={i === 0 ? '/blog' :`/blog/list/${i + 1}`}>{i +1 === currentPage? <b>{`${i + 1}`}</b> : `${i + 1}`}</Link>);\n    }\n    return (\n        <BasePage\n            title=\"Blog\"\n            path=\"/blog\"\n        >\n            {postsData}\n\t    <p>\n    \t        {currentPage !== 1 && (<Link className='pagination' to={prevLink}>{'<'}</Link>)}\n\t        {pagLinks}\n\t        {currentPage !== numPages && (<Link className='pagination' to={nextLink}>{'>'}</Link>)}\n\t    </p>\n        </BasePage>\n    );\n};\n\nexport const query = graphql`\n    query blogsQuery($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: {regex : \"\\/posts/\"} },\n            sort: {order: DESC, fields: [frontmatter___date]},\n            limit: $limit,\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    html\n                    excerpt(pruneLength: 200)\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM DD, YYYY\")\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport {StaticQuery, graphql, Link} from \"gatsby\";\n\nexport const SiteLogo = ({siteName}) => (\n    <StaticQuery \n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <Link\n                id=\"site-logo-link\"\n                to=\"/\"\n            >\n                <div\n                    id=\"site-logo\"\n                >\n                <h1>{data.site.siteMetadata.title.toLowerCase()}</h1>\n                </div>\n            </Link>\n        )}\n    />\n);\n","import React from \"react\";\nimport {Link} from \"gatsby\";\n\nconst LinkLi = ({to, text}) => {\n    return (\n        <li>\n            <Link to={to} activeClassName=\"active\">\n                <p>{text}</p>\n            </Link>\n        </li>\n    );\n}\n\nexport const HeaderLinks = () => {\n    return(\n        <ul id=\"headerLinks\">\n           <LinkLi to=\"/blog\" text=\"blog\" /> \n           <LinkLi to=\"/about\" text=\"about\" />\n           <LinkLi to=\"/contact\" text=\"contact\" />\n        </ul>\n    );\n}","import React from \"react\";\nimport {SiteLogo} from \"./siteLogo.js\";\nimport {HeaderLinks} from \"./headerLinks.js\";\n\nexport const Header = () => (\n    <div\n        id=\"header-container\"\n    >\n        <div id=\"header-inner-container\">\n            <SiteLogo/>\n            <HeaderLinks/>\n        </div>\n    </div>\n);\n","import React from \"react\";\n\nexport const Footer = () => (\n    <div\n        id=\"footer-container\"\n    >\n    </div>\n);\n","import {StaticQuery, graphql} from \"gatsby\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {Header} from \"../components/header.js\";\nimport {Footer} from \"../components/footer.js\";\nimport '../styles/global.scss';\n\nexport const BasePage = ({children, title, path, description}) => (\n    <StaticQuery \n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        baseUrl\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <React.Fragment>\n            <Helmet>\n                <title>{title ? `${title} | ${data.site.siteMetadata.title}` : data.site.siteMetadata.title}</title>\n                <meta property=\"og:title\" content={title || data.site.siteMetadata.title} />\n                <meta property=\"og:url\" content={path ? data.site.siteMetadata.baseUrl + path : data.site.siteMetadata.baseUrl} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:locale\" content=\"en_US\" />\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content=\"@kyoheiyazawa\" />\n                <meta name=\"twitter:creator\" content=\"@kyoheiyazawa\" />\n            </Helmet>\n            <Header />\n            <div\n                id=\"page-container\"\n            >\n                {children}\n            </div>\n            <Footer />\n            </React.Fragment>\n        )}\n    />\n);\n"],"sourceRoot":""}